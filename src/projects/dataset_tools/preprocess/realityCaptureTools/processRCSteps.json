{
    "steps" : [
        {
            "name": "preprocess_for_rc",
            "function": "rc_tools.preprocess_for_rc",
            "function_args": {
                "path": "${path}",
                "video_name": "${video_name}"
            }
        },
        {
            "name": "run_rc",
            "app": "RC",
            "command_args": [
                "-addFolder", "${path}/input/train/" ,
                "-addFolder", "${path}/input/validation/" ,
                "-importVideo", "${video_filename}", "${path}/input/test_video_frames/", "${one_over_fps}" ,
                "-align" ,
                "-selectMaximalComponent" ,
                "-selectAllImages" ,
                "-enableAlignment", "false" ,
                "-selectImage", "*validation_*" ,
                "-enableAlignment", "true" ,
                "-exportRegistration", "${path}/rcScene/validation_cameras/bundle.out", "${config_folder}/registrationConfig.xml" ,
                "-selectAllImages" ,
                "-enableAlignment", "false" ,
                "-selectImage", "*frame*" ,
                "-enableAlignment", "true" ,
                "-exportRegistration", "${path}/rcScene/test_path_cameras/bundle.out", "${config_folder}/registrationConfig.xml" ,
                "-selectAllImages" ,
                "-enableAlignment", "false" ,
                "-selectImage", "*train_*" ,
                "-enableAlignment", "true" ,
                "-exportRegistration", "${path}/rcScene/train_cameras/bundle.out", "${config_folder}/registrationConfig.xml" ,
                "-setReconstructionRegionAuto" ,
                "-scaleReconstructionRegion", "1.4", "1.4", "2.5", "center", "factor" ,
                "-calculateNormalModel" ,
                "-calculateTexture" ,
                "-selectMarginalTriangles" ,
                "-removeSelectedTriangles" ,
                "-save", "${path}/rcProj/RCproject.rcproj" ,
                "-renameSelectedModel", "${model_name}" ,
                "-exportModel", "${model_name}", "${mesh_obj_filename}",
                "-exportModel", "${model_name}", "${mesh_xyz_filename}",
                "-deselectModelTriangles" ,
                "-exportModel", "${model_name}", "${mesh_ply_filename}",
                "-quit"
            ]
        },
        {
            "name": "densify_mesh",
            "function": "rc_tools.densify_mesh",
            "function_args": {
                "mesh_path": "${path}/rcScene/meshes/mesh.obj"
            }
        },
        {
            "name": "dense_mesh",
            "app": "RC",
            "command_args": [
                "-load", "${path}/rcProj/RCproject.rcproj",
                "-selectMaximalComponent",
                "-importModel" , "${path}/rcScene/meshes/dense_mesh.obj",
                "-renameSelectedModel",  "RCTest",
                "-exportModel",  "RCTest",  "${path}/rcScene/meshes/dense_point_cloud.xyz",
                "-quit"
            ]
        },
        {
            "name": "rc_to_colmap_validation_cameras",
            "function": "rc_tools.rc_to_colmap",
            "function_args": {
                "rc_path": "${path}/rcScene/validation_cameras",
                "out_path": "${path}/colmap_1000/validation_colmap",
                "create_colmap": "0",
                "target_width": "1000"
            }
        },
        {
            "name": "rc_to_colmap_path_cameras",
            "function": "rc_tools.rc_to_colmap",
            "function_args": {
                "rc_path": "${path}/rcScene/test_path_cameras",
                "out_path": "${path}/colmap_1000/test_path_colmap",
                "create_colmap": "0",
                "target_width": "1000"
            }
        },
        {
            "name": "crop_cameras",
            "function": "rc_tools.crop_images",
            "function_args": {
                "path_data": "${path}/rcScene/train_cameras/",
                "path_dest": "${path}/rcScene/cropped_train_cameras/"
            }
        },
        {
            "name": "rc_to_colmap_1000_cropped_cameras",
            "function": "rc_tools.rc_to_colmap",
            "function_args": {
                "rc_path": "${path}/rcScene/cropped_train_cameras",
                "out_path": "${path}/colmap_1000/colmap",
                "create_colmap": "1"
            }
        },
        {
            "name": "rc_to_colmap_cropped_cameras",
            "function": "rc_tools.rc_to_colmap",
            "function_args": {
                "rc_path": "${path}/rcScene/cropped_train_cameras",
                "out_path": "${path}/sibr/colmap",
                "create_colmap": "1"
            }
        },
        {
            "name": "colmap_patch_match_stereo",
            "app": "colmap",
            "command_args": [
                "patch_match_stereo",
                "--workspace_path", "${path}/sibr/colmap/stereo",
                "--workspace_format", "COLMAP",
                "--PatchMatchStereo.max_image_size", "${patchMatchStereo_PatchMatchStereoDotMaxImageSize}",
                "--PatchMatchStereo.window_radius", "${patchMatchStereo_PatchMatchStereoDotWindowRadius}",
                "--PatchMatchStereo.window_step", "${patchMatchStereo_PatchMatchStereoDotWindowStep}",
                "--PatchMatchStereo.num_samples", "${patchMatchStereo_PatchMatchStereoDotNumSamples}",
                "--PatchMatchStereo.num_iterations", "${patchMatchStereo_PatchMatchStereoDotNumIterations}",
                "--PatchMatchStereo.geom_consistency", "${patchMatchStereo_PatchMatchStereoDotGeomConsistency}",
                "--PatchMatchStereo.gpu_index", "${gpusIndices}"
            ]
        },
        {
            "name": "colmap_stereo_fusion",
            "app": "colmap",
            "command_args": [
                "stereo_fusion",
                "--workspace_path", "${path}/sibr/colmap/stereo/",
                "--workspace_format", "COLMAP",
                "--input_type", "geometric",
                "--output_path", "${path}/sibr/colmap/stereo/fused.ply",
                "--StereoFusion.max_image_size", "${stereoFusion_MaxImageSize}",
                "--StereoFusion.check_num_images", "${stereoFusion_CheckNumImages}"
            ]
        },
        {
            "name": "colmap_delaunay_mesher",
            "app": "colmap",
            "command_args": [
                "delaunay_mesher",
                "--input_path", "${path}/sibr/colmap/stereo/",
                "--output_path", "${path}/sibr/colmap/stereo/meshed-delaunay.ply",
                "--input_type", "dense"
            ]
        }
    ]
}
